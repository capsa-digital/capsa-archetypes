plugins {
    id 'io.gitlab.arturbosch.detekt'
    id 'io.spring.dependency-management' apply false
    id 'org.jetbrains.kotlin.jvm' apply false
    id 'org.jetbrains.kotlin.plugin.spring' apply false
    id 'org.jetbrains.kotlin.plugin.jpa' apply false
    id 'org.springframework.boot' apply false
}

apply from: 'dependency.gradle'

if (!project.hasProperty("profiles")) {
    ext.profiles = "local"
}

if (!project.hasProperty("cucumberTag")) {
    ext.cucumberTag = "local"
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

detekt {
    failFast = false
    config = files("./detekt.yml")
    input = files("$projectDir")
}

allprojects {
    group = 'digital.capsa'
    version = "${version}"

    apply plugin: 'kotlin'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8

    targetCompatibility = 1.8

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    repositories {
        mavenCentral()
        google()
        jcenter()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://mvnrepository.com/artifact' }
        maven { url 'https://s3-us-west-2.amazonaws.com/dynamodb-local/release' }
        maven { url 'https://packages.confluent.io/maven/' }
        maven { url 'https://dl.bintray.com/kotlin/kotlinx.html/' }
    }

    dependencies {
        testImplementation(
                'org.junit.jupiter:junit-jupiter',
                'org.springframework.boot:spring-boot-starter-test',
                'org.mockito:mockito-core',
                'org.mockito:mockito-junit-jupiter',
                'org.hamcrest:java-hamcrest',
                'org.jetbrains.kotlin:kotlin-test'
        )
    }

    dependencyManagement {
        dependencies {
            libraries.each {
                library -> dependency library.value
            }
        }
        imports {
            mavenBom "io.projectreactor:reactor-bom:${versions.reactorBomVersion}"
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${versions.springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${versions.springCloudVersion}"
        }
    }

    task allDependencies(type: DependencyReportTask) {}

    test {
        useJUnitPlatform {
            includeEngines 'junit-jupiter'
            excludeEngines 'junit-vintage'
        }
        // Enable to debug unit tests
        testLogging.showStandardStreams = false
        jvmArgs '-Dspring.profiles.active=test'
    }
}

